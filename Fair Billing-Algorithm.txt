Youworkforahostedapplicationproviderwhichchargesfortheuseofitsapplicationbythedurationofsessions.Thereisachargepersecondofusage.Theusagedatacomesfromalogfilethatliststhetimeatwhichasessionstartsorstops(intheformatHH:MM:SS),thenameoftheuser(whichisasinglealphanumericstring,ofarbitrarylength)andwhetherthisisthestartorendofthesession,likethis:14:02:03ALICE99Start14:02:05CHARLIEEnd14:02:34ALICE99End14:02:58ALICE99Start14:03:02CHARLIEStart14:03:33ALICE99Start14:03:35ALICE99End14:03:37CHARLIEEnd14:04:05ALICE99End14:04:23ALICE99End14:04:41CHARLIEStartUnfortunately,thedeveloperoftheapplicationomittedsomevitalinformationfromthelogfile.Thereisnoindicatorwhichstartandendlinesarepairedtogether.Evenmoreunfortunately,thelogfilesarere-writtenonaregularbasis,sosessionsmayoverlapthetimeboundariesofthelogfile.Inotherwords,theremaybe“End”entriesforsessionsthatwerealreadyinprogresswhenthelogfilestarted,whichwillhavenopreceding“Start”.Similarly,whenthelogfilesareretrieved,theremaybesessionsstillinprogressthathavea“Start”butno“End”.Yourtaskistotakethelogfileandtoprintoutareportoftheusers,thenumberofsessions,andtheminimumpossibletotaldurationoftheirsessionsinsecondsthatisconsistentwiththedatainthefile.Asyoucanseeintheexampleabove,ausercanalsohavemorethanonesessionactiveconcurrently.Wherethereisan“End”withnopossiblematchingstart,thestarttimeshouldbeassumedtobetheearliesttimeofanyrecordinthefile.Wherethereisa“Start”withnopossiblematching“End”,theendtimeshouldbeassumedtobethelatesttimeofanyrecordinthefile.So,forafilecontainingonlytheserecords:14:02:03ALICE99Start14:02:05CHARLIEEnd14:02:34ALICE99EndthestarttimeforCHARLIE'srecordshouldbeassumedtobetheearliesttimeinthefile,i.e.14:02:03.Similarlyforthefirstexampleabove:...14:04:05ALICE99End14:04:23ALICE99End14:04:41CHARLIEStartthelastrecordisa“Start”andtherearenolaterrecordsatallsoCHARLIE'slastsessionwillbeconsideredtohavefinishedat14:04:41,i.e.itwillbe0secondsinduration.Puttingthisalltogether,theresultsfortheoriginaldatashownabovewouldbeasfollows(name,sessionsandtotaltime):ALICE994240CHARLIE337Yourprogramshouldtakeasinglecommandlineparameter,whichwillbethepathtothedatafiletoread.Youcanassumethatthedataintheinputwillbecorrectlyorderedchronologically,andthatallrecordsinthefilewillbefromwithinasingleday(i.e.theywillnotspanmidnight).Finally,youshouldnotethat,aswithmostlogfiles,theremaybeotherinvalidorirrelevantdatawithinthefile.Therefore,anylinesthatdonotcontainavalidtime-stamp,usernameandaStartorEndmarkershouldbesilentlyignoredandnotincludedinanycalculations.

Algorithm:
1. Read the log file in the specified path.
2. Convert the text file contents to Java bean objects for processing.
3. Identify the first log time and last log time available in the file provided.
4. Segregate the input data list based on the username/ userid
5. For every users do the steps 6 to 9.
6. Segregate based on session start and session end logs.
7a. Pair all the possible start and end logs. 
7b. Increment the sessioncount and compute the session timings. 
7c. Mark the data with flag for which the session computation is done.
8a. For all the remaining logs with session start available, increment the sessioncount, and compute the session timings till last log time.
8b. For all the remaining logs with session end available, increment the sessioncount, and compute the session timings from first log time.
9. Frame output object with user, session count and session time details.
10. Print the output data list.

